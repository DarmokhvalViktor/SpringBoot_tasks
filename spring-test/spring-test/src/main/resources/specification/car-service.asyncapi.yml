asyncapi: 3.0.0
info:
  title: Car Service Kafka API
  version: 1.0.0
  description: |-
    The API allows to interact with car events

defaultContentType: application/json

servers:
  dev:
    host: localhost:9092
    protocol: kafka
    description: Development Kafka broker

channels:
  carEvents:
    address: carservice.car.create.v1
    messages:
      CarCreated:
        $ref: '#/components/messages/CarCreated'
    description: The topic on which car created events may be produced and consumed.
operations:
  sendCarCreated:
    action: send
    channel:
      $ref: '#/channels/carEvents'
    tags:
      - name: Car
    summary: Produce car created event
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/carEvents/messages/CarCreated'
  onCarCreated:
    action: receive
    channel:
      $ref: '#/channels/carEvents'
    tags:
      - name: Car
    summary: >-
      Consume car created event
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/carEvents/messages/CarCreated'
components:
  messages:
    CarCreated:
      name: carCreated
      title: Car created
      summary: Car data
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/CarCreatedPayload'
  schemas:
    CarCreatedPayload:
      type: object
      properties:
        carId:
          type: integer
          format: int64
          description: Created car id
        carType:
          type: string
          description: Created car type
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          dummy-header:
            type: integer
            minimum: 0
            maximum: 100
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId:
            type: string
            enum:
              - dummy-id